@page "/hik"

@using SGS2025Client.Services
@inject HikvisionCameraService hikvisionCameraService
@inject IJSRuntime JS

<h3>Hikvision</h3>


<canvas id="cam1Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
<canvas id="cam2Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
<canvas id="cam3Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
<canvas id="cam4Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
@if (!string.IsNullOrEmpty(Image1))
{
    <img src="@Image1" width="480" />
}

@if (!string.IsNullOrEmpty(Image2))
{
    <img src="@Image2" width="480" />
}
@if (!string.IsNullOrEmpty(Image3))
{
    <img src="@Image3" width="480" />
}
@if (!string.IsNullOrEmpty(Image4))
{
    <img src="@Image4" width="480" />
}

@code {
    private string Image1, Image2, Image3, Image4;
    private Timer _timer;

    protected override void OnInitialized()
    {
        Task.Run(() =>
        {
            hikvisionCameraService.AddCamera("cam1", "192.168.1.109", 8000, "admin", "abcd@1234");
            hikvisionCameraService.AddCamera("cam2", "192.168.1.109", 8000, "admin", "abcd@1234");
            hikvisionCameraService.AddCamera("cam3", "192.168.1.109", 8000, "admin", "abcd@1234");
            hikvisionCameraService.AddCamera("cam4", "192.168.1.109", 8000, "admin", "abcd@1234");
        });

        _timer = new Timer(async _ => await UpdateFrame(), null, 1000, 200); // 10fps
    }
     
    private async Task UpdateFrame()
    {
        async Task Draw(string canvasId, string camId)
        {
            var url = hikvisionCameraService.CaptureToUrl(camId);
            if (!string.IsNullOrEmpty(url))
            {
                await JS.InvokeVoidAsync("drawFrameOnCanvasUrl", canvasId, camId);
            }
        }

        await Task.WhenAll(
            Draw("cam1Canvas", "cam1"),
            Draw("cam2Canvas", "cam2"),
            Draw("cam3Canvas", "cam3"),
            Draw("cam4Canvas", "cam4")
        );
    }
    private void UpdateImages(object state)
    {
        Image1 = hikvisionCameraService.GetImage("cam1");
        Image2 = hikvisionCameraService.GetImage("cam2");
        Image3 = hikvisionCameraService.GetImage("cam3");
        Image4 = hikvisionCameraService.GetImage("cam4");
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        _timer?.Dispose();
        hikvisionCameraService.StopAll();
    }
}