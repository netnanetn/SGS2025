@page "/tvt"

@using SGS2025Client.SDKCameraServices.Tvt
@inject TvtCameraService _tvtCameraService
@inject IJSRuntime JS
<h3>TVT</h3>


<canvas id="cam1Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
<canvas id="cam2Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
<canvas id="cam3Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
<canvas id="cam4Canvas" width="240" height="180" style="border:1px solid #ccc;"></canvas>
@if (!string.IsNullOrEmpty(Image1))
{
    <img src="@Image1" style="width:240px; height:180px; object-fit:cover;" />
}

@if (!string.IsNullOrEmpty(Image2))
{
    <img src="@Image2" style="width:240px; height:180px; object-fit:cover;" />
}
@if (!string.IsNullOrEmpty(Image3))
{
    <img src="@Image3" style="width:240px; height:180px; object-fit:cover;" />
}
@if (!string.IsNullOrEmpty(Image4))
{
    <img src="@Image4" style="width:240px; height:180px; object-fit:cover;" />
} 
<button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px;" @onclick="chupanh">
    <i class="bi bi-repeat"></i>
</button>

@code {
    private string Image1, Image2, Image3, Image4;
    private Timer _timer;

    

    protected override void OnInitialized()
    {
        Task.Run(() =>
        {
            _tvtCameraService.AddCamera("cam1", "192.168.1.107", 9008, "admin", "A123456a@");
            _tvtCameraService.AddCamera("cam2", "192.168.1.107", 9008, "admin", "A123456a@");
            _tvtCameraService.AddCamera("cam3", "192.168.1.107", 9008, "admin", "A123456a@");
            _tvtCameraService.AddCamera("cam4", "192.168.1.107", 9008, "admin", "A123456a@");
        });
         
        _timer = new Timer(async _ => await UpdateFrame(), null, 1000, 50); // 10fps
    }

  
    
    private async Task UpdateFrame()
    { 
        async Task Draw(string canvasId, string camId)
        {
            var url = _tvtCameraService.CaptureToUrl(camId);
            if (!string.IsNullOrEmpty(url))
            {
                await JS.InvokeVoidAsync("drawFrameOnCanvasUrl", canvasId, camId);
            }
        }

        await Task.WhenAll(
            Draw("cam1Canvas", "cam1"),
            Draw("cam2Canvas", "cam2"),
            Draw("cam3Canvas", "cam3"),
            Draw("cam4Canvas", "cam4")
        );
    }
    private void chupanh()
    {
        var imageBase64_1 = _tvtCameraService.GetImage("cam1");
    }
    public void Dispose()
    {
        _timer?.Dispose();
        _tvtCameraService.StopAll();
    }
}