@page "/scalewithimage"

@using SGS2025Client.Components.HelperService
@using SGS2025Client.Services
@inject HikvisionCameraService hikvisionCameraService
@inject IJSRuntime JS
@using System.Globalization
@inject LoadDataService loadDataService
@inject ScaleService scaleService
@inject PdfService PdfService
@inject RazorRenderer RazorRenderer
@using PuppeteerSharp

 <div class="container-fluid">


    <div class="row">
        <!-- Cột trái: Camera -->
        <div class="col-2" style="padding: unset">
            <div style="    background-color: #558bef;
                            text-align: center;
                            border-radius: 0px;
                            border-right: 1px solid white;
                            color: white;
                            font-size: 12px;
                            padding: 5px;border-radius: 5px;">
                CAMERA
            </div>
            <div class="d-flex flex-column align-items-center py-3 gap-3">
                <img src="/images/scale.jpg" class="img-fluid" />
                <img src="/images/scale.jpg" class="img-fluid" />
                <img src="/images/scale.jpg" class="img-fluid" />
                <img src="/images/scale.jpg" class="img-fluid" />
            </div>
        </div>

        <!-- Cột phải: Thông tin phiếu cân và khối lượng cân -->
        <div class="col-10">
            <div class="row" >
                <!-- Thông tin phiếu cân -->
                <div class="col-5 parent" style=" padding-left: unset; height: auto">
                    <div style="    background-color: #558bef;
                            text-align: center;
                            border-radius: 0px;
                            color: white;
                            font-size: 12px;
                            padding: 5px;border-radius: 5px;">
                        THÔNG TIN PHIẾU CÂN
                    </div>
                    <div style="padding: 15px">
                        <div class="row">
                            <!-- Cột trái: Thông tin -->
                            <div class="col-md-8">
                                <div class="mb-2 d-flex align-items-center">
                                    <label for="sophieu" class="form-label form-label-sm me-2 mb-0" style="width: 100px;">Số phiếu</label>
                                    <input @bind="scaleData.Id" readonly type="text" id="sophieu" class="form-control form-control-sm" style="margin-left: 15px;" />
                                    <button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px;">
                                        <i class="bi bi-lightning-charge"></i>
                                    </button>
                                </div>
                                <div class="mb-2 d-flex align-items-center">
                                    <label for="bienso" class="form-label form-label-sm me-2 mb-0" style="width: 100px;">Biển số</label>
                                    <AutoCompleteInput T="TblVehicle"
                                    Items="ModelLoad.Vehicles"
                                    ItemText="v => v.VehiceCode"
                                    Placeholder="Nhập biển số..."
                                    OnSelected="OnVehicleSelected"
                                    Value="@scaleData.Vehicle"  />
                                    <button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px;" @onclick="() => showVehiclePicker = true">
                                        <i class="bi bi-repeat"></i>
                                    </button>
                                </div>



                            </div>

                            <!-- Cột phải: Ảnh biển số -->
                            <div class="col-md-4 d-flex align-items-start justify-content-start gap-2">
                                <img src="/images/bs2.png" class="img-thumbnail" style="max-width: 100px;" />
                            </div>
                        </div>
                        <div class="row">
                            <!-- Cột trái: Thông tin -->
                            <div class="col-md-12">
                                <div class="mb-1 d-flex align-items-center">
                                    <label for="khachhang" class="form-label form-label-sm me-2 mb-0" style="width: 100px;">Khách hàng</label>
                                    <AutoCompleteInput T="TblCustomer"
                                    Items="ModelLoad.Customers"
                                    ItemText="c => c.Name"
                                    Placeholder="Nhập tên khách hàng..."
                                    OnSelected="OnCustomerSelected"
                                    Value="@scaleData.CustomerName"  />
                                    <button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px;" @onclick="() => showCustomerPicker = true">
                                        <i class="bi bi-person-badge"></i>
                                    </button>
                                </div>


                                <div class="mb-1 d-flex align-items-center">
                                    <label for="loaihang" class="form-label form-label-sm me-2 mb-0" style="width: 100px;">Loại hàng</label>
                                    <AutoCompleteInput T="TblProduct"
                                    Items="ModelLoad.Products"
                                    ItemText="p => p.Name"
                                    Placeholder="Nhập loại hàng..."
                                    OnSelected="OnProductSelected"
                                    Value="@scaleData.ProductName" />
                                    <button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px;" @onclick="() => showProductPicker = true">
                                        <i class="bi bi-stack"></i>
                                    </button>
                                </div> 
                                <div class="mb-1 d-flex align-items-center">
                                    <label for="kieucan" class="form-label form-label-sm me-2 mb-0" style="width: 100px;">Kiểu cân</label>

                                    <select id="kieucan"
                                    class="form-select form-select-sm form-control-sm-custom"
                                    @bind="scaleData.TypeId">
                                        <option value="1">Nhập hàng</option>
                                        <option value="2">Xuất hàng</option>
                                        <option value="3">Dịch vụ</option>
                                        <option value="4">Trung chuyển</option>
                                        <option value="5">Khác</option>
                                    </select>

                                    <button class="btn btn-sm" type="button"
                                    style="padding: 3px 6px; background-color: #d58206; margin-left: 5px;">
                                        <i class="bi bi-tags"></i>
                                    </button>
                                </div>

                                <div class="mb-1 d-flex align-items-center">
                                    <label for="tenlaixe" class="form-label form-label-sm me-2 mb-0" style="width: 100px;">Tên lái xe</label>
                                    <input type="text" id="tenlaixe" class="form-control form-control-sm-custom" @bind="scaleData.DriverName" />
                                    <button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px; opacity: 0;">
                                        <i class="bi bi-dice-1"></i>
                                    </button>
                                </div>
                                <div class="mb-1 d-flex align-items-center">
                                    <label for="ghichu" class="form-label form-label-sm me-2 mb-0" style="width: 100px;">Ghi chú</label>
                                    <input type="text" id="ghichu" class="form-control form-control-sm-custom" @bind="scaleData.Note" />
                                    <button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px; opacity: 0;">
                                        <i class="bi bi-fire"></i>
                                    </button>
                                </div>

                            </div> 
                        </div>
                    </div>
                    <div class="bottom-fixed border-top pt-3 px-3">
                        <div class="row g-2" style="height: 80px">
                            <!-- g-2: khoảng cách giữa các ô -->
                            <div class="col-4">
                                <button class="btn btn-sm btn-warning w-100" @onclick="OnClickThemMoi"><i class="bi bi-plus-square"></i> Thêm mới</button>
                            </div>
                            <div class="col-4">
                                <button type="button" class="btn btn-sm btn-primary w-100" @onclick="CanLan1"> <i class="bi bi-box-arrow-in-left"></i> Cân lần 1</button>
                            </div>

                            <div class="col-4">
                                <button class="btn btn-sm btn-success w-100" @onclick="InPhieu"><i class="bi bi-printer-fill"></i> In Phiếu</button>
                            </div>
                            <div class="col-4">
                                <button class="btn btn-sm btn-danger w-100" @onclick="LuuPhieu"><i class="bi bi-save"></i> Lưu phiếu</button>
                            </div>
                            <div class="col-4">
                                <button class="btn btn-sm btn-secondary w-100" @onclick="CanLan2"><i class="bi bi-box-arrow-right"></i> Cân lần 2</button>
                            </div>

                            <div class="col-4">
                                <button class="btn btn-sm btn-dark w-100"><i class="bi bi-repeat"></i> Quay lại</button>
                            </div>
                        </div>
                    </div>


                </div>

                <!-- Ô khối lượng cân -->
                <div class="col-7" style="padding: unset">
                    <div class="row" style="padding: unset">
                        <div class="col-6"  style="padding: 0px 10px">
                            <div class="digital-display">
                                256800
                            </div>
                        </div>
                        <div class="col-6" style="padding: unset">
                            <div style="    background-color: #558bef;
                            text-align: center;
                            border-radius: 0px;
                            color: white;

                            font-size: 12px;
                            padding: 5px;border-radius: 5px;">
                                THỐNG KÊ
                            </div>

                            <table class="table table-sm   text-center">
                                <thead class="table-light">
                                    <tr>
                                        <th>Trong ngày</th>
                                        <th>Chờ cân lần 2</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>
                                            Cân lần 1: <strong>11</strong><br />
                                            Cân lần 2: <strong>2</strong>
                                        </td>
                                        <td>
                                            <strong>49</strong> chuyến
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="row" style="padding: unset">
                        <div class="col-6 parent" style=" padding: 10px; height: auto">
                            <div>
                                <table class="digital-table">
                                    <tr>
                                        <td class="digital-label" style="border-top-left-radius: 10px;">KL cân lần 1</td>
                                        <td style="border-top-right-radius: 10px;">1200 kg</td>
                                    </tr>
                                    <tr>
                                        <td class="digital-label">KL cân lần 2</td>
                                        <td>0 kg</td>
                                    </tr>
                                    <tr>
                                        <td class="digital-label" style="border-bottom-left-radius: 10px;">KL hàng</td>
                                        <td style="border-bottom-right-radius: 10px;">0 kg</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="bottom-fixed border-top" style="    padding-top: 19px;">
                                <!-- 2 checkbox trên cùng dòng -->
                                <div class="d-flex gap-4 align-items-center">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="checkboxcanlan2">
                                        <label class="form-check-label" for="checkboxcanlan2" style="font-size: small;">Xe chờ cân lần 2</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="checkboxxedacan">
                                        <label class="form-check-label" for="checkboxxedacan" style="font-size: small;">Xe đã cân</label>
                                    </div>
                                </div>

                                <!-- Combobox kiểu cân -->
                                <div class="mb-3 d-flex align-items-center">
                                    @* <label for="dropdownkieucan" class="form-label me-2 mb-0" style="min-width: 80px; font-size: small;">Kiểu cân</label> *@
                                    <select id="dropdownkieucan" class="form-select" style="font-size: small;">
                                        <option>Tất cả</option>
                                        <option>Nhập hàng</option>
                                        <option>Xuất hàng</option>
                                        <option>Dịch vụ</option>
                                    </select>
                                </div>

                                <!-- Datetime + nút tìm kiếm -->
                                <div class="d-flex gap-3 align-items-end">
                                    <div>
                                        <input type="date" id="ngaycanfilter" style="font-size: small;" class="form-control" @bind="ngayCan" />
                                    </div>
                                    <div>
                                        <button class="btn btn-sm btn-primary " style="font-size: small;">Tìm kiếm</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 border p-3 d-flex flex-wrap justify-content-between" style="gap: 10px;">
                            <img src="/images/scale.jpg" class="img-fluid img-quad" />
                            <img src="/images/scale.jpg" class="img-fluid img-quad" />
                            <img src="/images/scale.jpg" class="img-fluid img-quad" />
                            <img src="/images/scale.jpg" class="img-fluid img-quad" />
                        </div>
                    </div>
                </div>
            </div>

            <!-- Bảng dữ liệu cân -->
            <div class="row mt-3">
                <div class="col-12 p-3" style="margin-left: 5px">
                    <div style="overflow-x: auto; max-width: 100%;">
                        <table class="table table-bordered table-striped table-sm" style="font-size: 0.85rem; white-space: nowrap;">
                            <thead class="table-dark">
                                <tr>
                                    <th>Số phiếu</th>
                                    <th>Ngày cân</th>
                                    <th>Biển số xe</th>
                                    <th>Khách hàng</th>
                                    <th>Hàng hóa</th>
                                    <th>Thời gian cân 1</th>
                                    <th>KL cân 1</th>
                                    <th>Thời gian cân 2</th>
                                    <th>KL cân 2</th>
                                    <th>KL hàng</th>
                                    <th>Đơn giá</th>
                                    <th>Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var p in danhSachPhieu)
                                {
                                    <tr @ondblclick="() => OnRowDoubleClick(p)">
                                        <td>@p.Id</td>
                                        <td>@p.CreateDay?.ToString("dd/MM/yyyy")</td>
                                        <td>@p.Vehicle</td>
                                        <td>@p.CustomerName</td>
                                        <td>@p.ProductName</td>
                                        <td>@p.TimeIn?.ToString(@"hh\:mm")</td>
                                        <td>@FormatKL(p.WeightIn)</td>
                                        <td>@p.TimeOut?.ToString(@"hh\:mm")</td>
                                        <td>@FormatKL(p.WeightOut)</td>
                                        <td>@FormatKL(p.ProductNumber)</td>
                                        <td>@FormatCurrency(p.ProductPrice)</td>
                                        <td>@FormatCurrency(p.TotalMoney)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* <VehiclePicker @bind-Show="ShowPicker" OnSelected="HandleSelected" />  *@
<VehiclePicker Show="@showVehiclePicker"
ShowChanged="@((v) => showVehiclePicker = v)"
OnSelected="@OnVehicleSelected" />
<CustomerPicker Show="@showCustomerPicker"
ShowChanged="@((v) => showCustomerPicker = v)"
OnSelected="@OnCustomerSelected" />
<ProductPicker Show="@showProductPicker"
ShowChanged="@((v) => showProductPicker = v)"
OnSelected="@OnProductSelected" />


@if (showModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Phiếu thông tin xe</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    @if (pdfBase64 != null)
                    {
                        <iframe src="data:application/pdf;base64,@pdfBase64" style="width: 100%; height: 500px; border: none;"></iframe>
                    }
                    else
                    {
                        <p>Đang tạo PDF...</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Đóng</button>
                    <button type="button" class="btn btn-primary" @onclick="PrintSilent">In ngầm</button>
                    <button type="button" class="btn btn-success" @onclick="DownloadPdf">Tải PDF</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private FilterInitViewModel ModelLoad = new();


    private string Image1, Image2, Image3, Image4;
    private Timer _timer;

    private DateTime ngayCan = DateTime.Today;
    private List<TblScale> danhSachPhieu = new();

    private TblScale scaleData = new();

    //print
    private bool showModal = false;
    private string? pdfBase64;

 

    private void CloseModal()
    {
        showModal = false;
        pdfBase64 = null;
    }

    private async Task PrintSilent()
    {
      //  await JS.InvokeVoidAsync("printSilent", pdfBase64);
        await PdfService.PrintPdf(pdfBase64);
    }

    private async Task DownloadPdf()
    {
        await JS.InvokeVoidAsync("saveAsFile", "output.pdf", pdfBase64);
    }
    //end print

    protected override async void OnInitialized()
    {
        ModelLoad = await loadDataService.LoadAllData();
        danhSachPhieu = await scaleService.SearchAsync("", 200);
    }
    private async Task CanLan1()
    {
        var s = "";
        await JS.InvokeVoidAsync("console.log", System.Text.Json.JsonSerializer.Serialize(scaleData));

        // xu ly de luu

        if (string.IsNullOrEmpty(scaleData.Code))
            scaleData.Code = Guid.NewGuid().ToString("N")[..8];

        scaleData.TimeIn ??= DateTime.Now;
        scaleData.WeightIn = 5500;
        scaleData.WeightOut = 0;
        scaleData.IsActive ??= true;
        scaleData.CreateDay ??= DateTime.Now;
        scaleData.UpdateDay = DateTime.Now;
        scaleData.CreateBy ??= "admin";   // hoặc lấy từ User.Identity.Name
        scaleData.UpdateBy = "admin";

        scaleData.StatusPayment ??= "Chưa thanh toán";
        scaleData.TotalMoney ??= 0;
        scaleData.MoneyPayment ??= 0;
        scaleData.MoneyDiscount ??= 0;
        scaleData.MoneyDebt ??= 0;
        scaleData.ProductPrice ??= 0;
        scaleData.ProductMoney ??= 0;

    
         
        await scaleService.AddAsync(scaleData);
        danhSachPhieu = await scaleService.SearchAsync("", 200);
    }
    private async Task CanLan2()
    { 
       

        // xu ly de luu

        scaleData.WeightOut = 2500;
        await JS.InvokeVoidAsync("console.log", System.Text.Json.JsonSerializer.Serialize(scaleData));
        await scaleService.CanLan2(scaleData);
        danhSachPhieu = await scaleService.SearchAsync("", 200);
    }
    private async Task LuuPhieu()
    {  
        await scaleService.LuuPhieu(scaleData);
        danhSachPhieu = await scaleService.SearchAsync("", 200);
    }
    private async Task InPhieu()
    {
      

        // Render template thành HTML
        var html = await RazorRenderer.RenderTemplateAsync("ScalePdfTemplate6Img.cshtml", scaleData);

        var pdfBytes = await PdfService.GeneratePdfAsync(html);
        pdfBase64 = Convert.ToBase64String(pdfBytes);
         
        showModal = true;

        //in ko show
       // await PdfService.PrintPdf(pdfBase64);

    }
    private async Task InPhieu_bak()
    {
        var pdfBytes = await PdfService.GeneratePdfAsync(scaleData);
        pdfBase64 = Convert.ToBase64String(pdfBytes);

        showModal = true;

        //in ko show
        // await PdfService.PrintPdf(pdfBase64);

    }
     
    private async Task OnClickThemMoi(){
        scaleData = new TblScale();
    }

    
    private string FormatCurrency(double? amount) =>
        string.Format(CultureInfo.GetCultureInfo("vi-VN"), "{0:#,##0} đ", amount);

    private string FormatKL(decimal? kl) =>
        string.Format("{0:#,##0} kg", kl);


    private bool showVehiclePicker;
    private TblVehicle? selectedVehicle;
    private string SelectedText =>
       selectedVehicle is null ? "(chưa chọn)" : $"{selectedVehicle.VehiceCode} - {selectedVehicle.DriverName} - {selectedVehicle.DriverPhone}";

    private Task OnVehicleSelected(TblVehicle v)
    {
        selectedVehicle = v;
        scaleData.Vehicle = v.VehiceCode;
        bienSoSearch = v.VehiceCode;
        StateHasChanged();
        return Task.CompletedTask;
    }


    private bool showCustomerPicker;
    private TblCustomer? selectedCustomer;

    private Task OnCustomerSelected(TblCustomer c)
    {
        selectedCustomer = c;
        scaleData.CustomerName = c.Name;
        customerSearch = c.Name;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private bool showProductPicker;
    private TblProduct? selectedProduct;

    private Task OnProductSelected(TblProduct c)
    {
        selectedProduct = c;
        scaleData.ProductName = c.Name;
        productSearch = c.Name;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private string bienSoSearch = string.Empty;
    private List<TblVehicle> filteredVehicles = new();
    private void OnInputChanged(ChangeEventArgs e)
    {
        bienSoSearch = e.Value?.ToString() ?? string.Empty;

        if (string.IsNullOrWhiteSpace(bienSoSearch))
        {
            filteredVehicles.Clear();
        }
        else
        {
            filteredVehicles = ModelLoad.Vehicles
                .Where(v => v.VehiceCode.Contains(bienSoSearch, StringComparison.OrdinalIgnoreCase))
                .Take(10)
                .ToList();
        }
    }

    private void SelectVehicle(TblVehicle vehicle)
    {
        bienSoSearch = vehicle.VehiceCode;
        scaleData.Vehicle = vehicle.VehiceCode; // gán lại vào model chính
        filteredVehicles.Clear();
    }

    private string customerSearch = string.Empty;
    private List<TblCustomer> filteredCustomers = new();

    private void OnCustomerInputChanged(ChangeEventArgs e)
    {
        customerSearch = e.Value?.ToString() ?? string.Empty;

        if (string.IsNullOrWhiteSpace(customerSearch))
        {
            filteredCustomers.Clear();
        }
        else
        {
            filteredCustomers = ModelLoad.Customers
                .Where(c => c.Name.Contains(customerSearch, StringComparison.OrdinalIgnoreCase))
                .Take(10)
                .ToList();
        }
    }

    private void SelectCustomer(TblCustomer customer)
    {
        customerSearch = customer.Name;
        scaleData.CustomerName = customer.Name; // gán lại vào model chính
        filteredCustomers.Clear();
    }

    private string productSearch = string.Empty;
    private List<TblProduct> filteredProducts = new();

    private void OnProductInputChanged(ChangeEventArgs e)
    {
        productSearch = e.Value?.ToString() ?? string.Empty;

        if (string.IsNullOrWhiteSpace(productSearch))
        {
            filteredProducts.Clear();
        }
        else
        {
            filteredProducts = ModelLoad.Products
                .Where(p => p.Name.Contains(productSearch, StringComparison.OrdinalIgnoreCase))
                .Take(10)
                .ToList();
        }
    }

    private void SelectProduct(TblProduct product)
    {
        productSearch = product.Name;
        scaleData.ProductName = product.Name; // gán lại vào model chính
        filteredProducts.Clear();
    }

    private void OnRowDoubleClick(TblScale item)
    {
        // clone object (tránh tham chiếu trực tiếp)
        scaleData = new TblScale
        {
            Id = item.Id,
            Code = item.Code,
            Vehicle = item.Vehicle,
            DriverName = item.DriverName,
            TimeIn = item.TimeIn,
            WeightIn = item.WeightIn,
            TimeOut = item.TimeOut,
            WeightOut = item.WeightOut,
            WeightImpurity = item.WeightImpurity,
            ProductNumber = item.ProductNumber,
            ProductName = item.ProductName,
            CustomerId = item.CustomerId,
            CustomerName = item.CustomerName,
            CustomerAddress = item.CustomerAddress,
            CustomerPhone = item.CustomerPhone,
            ProductId = item.ProductId,
            ProductPrice = item.ProductPrice,
            ProductMoney = item.ProductMoney,
            Proportion = item.Proportion,
            Exchange = item.Exchange,
            Note = item.Note,
            TypeId = item.TypeId,
            TopSeal = item.TopSeal,
            IsActive = item.IsActive,
            TotalMoney = item.TotalMoney,
            MoneyPayment = item.MoneyPayment,
            MoneyDiscount = item.MoneyDiscount,
            MoneyDebt = item.MoneyDebt,
            StatusPayment = item.StatusPayment,
            Img11 = item.Img11,
            Img12 = item.Img12,
            Img13 = item.Img13,
            Img21 = item.Img21,
            Img22 = item.Img22,
            Img23 = item.Img23,
            IndexInDay = item.IndexInDay,
            CreateDay = item.CreateDay,
            CreateBy = item.CreateBy,
            UpdateDay = item.UpdateDay,
            UpdateBy = item.UpdateBy
        };
    }

}
