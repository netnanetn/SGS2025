@page "/dahua"

@using SGS2025Client.Services
@inject DahuaCameraService dahuaCameraService
<h3>Dahua</h3>
@if (!string.IsNullOrEmpty(Image1))
{
    <img src="@Image1" width="480" />
}

@if (!string.IsNullOrEmpty(Image2))
{
    <img src="@Image2" width="480" />
}
@if (!string.IsNullOrEmpty(Image3))
{
    <img src="@Image3" width="480" />
}
@if (!string.IsNullOrEmpty(Image4))
{
    <img src="@Image4" width="480" />
} 
<button class="btn btn-sm" type="button" style="padding: 3px 6px; background-color: #d58206; margin-left: 5px;" @onclick="chupanh">
    <i class="bi bi-repeat"></i>
</button>

@code {
    private string Image1, Image2, Image3, Image4;
    private Timer _timer;

    protected override void OnInitialized()
    {
        Task.Run(() =>
        {
            dahuaCameraService.AddCamera("cam1", "192.168.1.109", 37777, "admin", "abcd@1234");
            dahuaCameraService.AddCamera("cam2", "192.168.1.109", 37777, "admin", "abcd@1234");
            //  dahuaCameraService.AddCamera("cam3", "192.168.1.107", 8002, "admin", "abcd@1234");
            //  dahuaCameraService.AddCamera("cam4", "192.168.1.107", 8002, "admin", "abcd@1234");
        });

        _timer = new Timer(UpdateImages, null, 1000, 1000);
    }

    private void UpdateImages(object state)
    {
         Image1 = dahuaCameraService.GetImage("cam1");
        
        Image2 = dahuaCameraService.GetImage("cam2");
        // Image3 = dahuaCameraService.GetImage("cam3");
        //Image4 = dahuaCameraService.GetImage("cam4");
        InvokeAsync(StateHasChanged);
    }
    private void chupanh()
    {
        dahuaCameraService.GetImage("cam1");
    }
    public void Dispose()
    {
        _timer?.Dispose();
        dahuaCameraService.StopAll();
    }
}